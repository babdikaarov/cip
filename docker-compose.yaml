services:
   nginx:
      container_name: nginx
      image: "nginx:1.13-alpine"
      restart: unless-stopped
      ports:
         - "80:80"
         # - "443:443"
      volumes:
         - ./nginx/main.config/nginx.conf:/etc/nginx/nginx.conf
         - ./nginx/conf:/etc/nginx/conf.d
         # - "/etc/letsencrypt:/etc/letsencrypt"
      networks:
         - shared_network
   cip_cms:
      container_name: cip_cms
      build:
         context: ./cip_cms
         dockerfile: Dockerfile
      image: cip_cms:latest
      restart: unless-stopped
      env_file: .env
      environment:
         DATABASE_CLIENT: ${DATABASE_CLIENT}
         DATABASE_HOST: ${DATABASE_HOST}
         DATABASE_NAME: ${DATABASE_NAME}
         DATABASE_USERNAME: ${DATABASE_USERNAME}
         DATABASE_PORT: ${DATABASE_PORT}
         JWT_SECRET: ${JWT_SECRET}
         ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
         DATABASE_PASSWORD: ${DATABASE_PASSWORD}
         NODE_ENV: ${NODE_ENV}
      volumes:
         - ./cip_cms/config:/opt/app/config
         - ./cip_cms/src:/opt/app/src
         - ./cip_cms/package.json:/opt/package.json
         - ./cip_cms/package-lock.json:/opt/package-lock.json
         - .env:/opt/app/.env
         - ./cip_cms/public/uploads:/opt/app/public/uploads
      ports:
         - "1337:1337"
      networks:
         - strapi_network
         - shared_network
      depends_on:
         - cip_cmsDB

   cip_cmsDB:
      container_name: cip_cmsDB
      restart: unless-stopped
      env_file: .env
      image: "postgres:16-alpine"
      environment:
         POSTGRES_USER: ${DATABASE_USERNAME}
         POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
         POSTGRES_DB: ${DATABASE_NAME}
      volumes:
         - cip_cms-data:/var/lib/postgresql/data/ #using a volume
      ports:
         - "5432:5432"
      networks:
         - strapi_network

   cip_cmsAdminer:
      container_name: cip_cmsAdminer
      image: adminer
      restart: unless-stopped
      ports:
         - "9090:8080"
      environment:
         - ADMINER_DEFAULT_SERVER=cip_cmsDB
      networks:
         - shared_network
         - strapi_network
      depends_on:
         - cip_cmsDB

volumes:
   cip_cms-data:

networks:
   strapi_network:
      driver: bridge
   shared_network:
      driver: bridge
